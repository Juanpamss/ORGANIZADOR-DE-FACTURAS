/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectolibres;

import ConexionBDD.Conexion;
import Factura.Cargar_XML;
import Factura.DatosFactura;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;

import javax.swing.table.TableModel;
import org.jdom2.JDOMException;

/**
 *
 * @author jairo
 */
public class XMLManager extends javax.swing.JFrame {

    /**
     * Creates new form XMLManager
     */
    String pathFile = null;
    DatosFactura datos = null;

    String tiposPersonal[] = {"Vivienda", "Alimentacion", "Salud", "Educacion", "Vestimenta", "Otros"};
    String tiposNegocios[] = {"Mercaderia", "Arriendo", "Servicios b치sicos", "Sueldos", "Movilizaci칩n", "Vi치ticos",
        "Capacitaci칩n", "Suministros de oficina", "Herramientas de trabajo", "Agregar Gasto de Negocio"};
    ArrayList<TipoItem> listaTiposPersonal;
    ArrayList<TipoItem> listaTiposNegocios;
    ArrayList<TipoItem> lista;
    Conexion cp = new Conexion();
    Conexion cp2 = new Conexion();

    //VARIABLE DESGLOCE
    JComboBox comboBox;
    JComboBox comboBoxNegocio;
    JTable tablaProductos = new JTable();
    JTable tablaNegocio = new JTable();
    JTable tablaNegocioTotales;
    String tipoEstado[];
    DefaultComboBoxModel modelo;

    String evtTipo = "";
    int filaTipo = -1;

    String numFac;
    int anio;
    String cedula, tipo;
    //

    String detalleQ = "";

    DefaultListModel datosLista = new DefaultListModel();

    String nombreArchivo = "src/tipoGastos.txt";

    String linea;

    private Dimension dim;

    public XMLManager() {
        initComponents();

        jScrollNegocioTotales.setPreferredSize(new Dimension(350, 190));

        this.lista = new ArrayList<>();
        this.listaTiposNegocios = new ArrayList<>();
        for (String aux : this.tiposNegocios) {
            listaTiposNegocios.add(new TipoItem(aux, 0));
        }
        this.listaTiposPersonal = new ArrayList<>();
        for (String aux : this.tiposPersonal) {
            listaTiposPersonal.add(new TipoItem(aux, 0));
        }

        try {

            BufferedReader entrada = new BufferedReader(new FileReader(nombreArchivo));

            if (!entrada.ready()) {

                throw new IOException();

            }

            while ((linea = entrada.readLine()) != null) {

                datosLista.addElement(linea);

            }

            entrada.close();

        } catch (Exception e) {

            System.out.println(e);

        }

        jLabel5.setVisible(false);
        jLabelprov_ciu.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelprov_ruc = new javax.swing.JLabel();
        jLabelprov_nom = new javax.swing.JLabel();
        jLabelprov_ciu = new javax.swing.JLabel();
        jLabelprov_dir = new javax.swing.JLabel();
        jComboBoxTipoGasto = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jComboBoxTipoFactura = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelcliente_ci = new javax.swing.JLabel();
        jLabelcliente_nom = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        panel_gastos = new javax.swing.JScrollPane();
        jLabel22 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        lbl_educacion = new javax.swing.JLabel();
        lbl_vestimenta = new javax.swing.JLabel();
        txt_vestimenta = new javax.swing.JTextField();
        txt_vivienda = new javax.swing.JTextField();
        txt_alimentacion = new javax.swing.JTextField();
        txt_salud = new javax.swing.JTextField();
        txt_educacion = new javax.swing.JTextField();
        lbl_Vivienda = new javax.swing.JLabel();
        lbl_alimentacion = new javax.swing.JLabel();
        lbl_salud = new javax.swing.JLabel();
        lbl_otros = new javax.swing.JLabel();
        txt_otros = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollNegocioTotales = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabelgasto_alimentacion = new javax.swing.JLabel();
        jLabelgasto_vestimenta = new javax.swing.JLabel();
        jLabelgasto_vivienda = new javax.swing.JLabel();
        jLabelgasto_salud = new javax.swing.JLabel();
        jLabelgasto_educacion = new javax.swing.JLabel();
        jLabelgasto_otros = new javax.swing.JLabel();
        jLabelfac_total_sin_iva = new javax.swing.JLabel();
        jLabelfac_iva = new javax.swing.JLabel();
        jLabelfac_total_con_iva = new javax.swing.JLabel();
        jLabelfac_cod = new javax.swing.JLabel();
        jLabelfac_fecha = new javax.swing.JLabel();
        jButtonCancelarCarga = new javax.swing.JButton();
        jButtonGuardarDatosFactura = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuSeleccionarFactura = new javax.swing.JMenuItem();
        jMenuRegresarInicio = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WorkSpace");

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("DATOS DEL PROVEEDOR");

        jLabel2.setText("RUC:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Direccion:");

        jLabel5.setText("Ciudad:");

        jLabelprov_ruc.setText("No Encontrado");

        jLabelprov_nom.setText("No Encontrado");

        jLabelprov_ciu.setText("No Encontrado");

        jLabelprov_dir.setText("No Encontrado");

        jComboBoxTipoGasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoGastoActionPerformed(evt);
            }
        });

        jLabel23.setText("Tipo de gasto del proveedor:");

        jComboBoxTipoFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoFacturaActionPerformed(evt);
            }
        });

        jLabel24.setText("Tipo de factura:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelprov_ruc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelprov_dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelprov_nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelprov_ciu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTipoGasto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTipoFactura, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(448, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelprov_ruc))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelprov_nom))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelprov_dir))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelprov_ciu))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxTipoFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addContainerGap(240, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Proveedor", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("DATOS DEL CLIENTE");

        jLabel7.setText("RUC o CI:");

        jLabel8.setText("Nombre:");

        jLabelcliente_ci.setText("No Encontrado");

        jLabelcliente_nom.setText("No Encontrado");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelcliente_nom)
                            .addComponent(jLabelcliente_ci))))
                .addContainerGap(605, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelcliente_ci))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabelcliente_nom))
                .addContainerGap(428, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cliente", jPanel4);

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel22.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel22.setText("DESGLOCE DE LOS ITEMS DE LA FACTURA");

        lbl_educacion.setText("Educacion");

        lbl_vestimenta.setText("Vestimenta");
        lbl_vestimenta.setToolTipText("");

        txt_vestimenta.setText("0.0");

        txt_vivienda.setText("0.0");

        txt_alimentacion.setText("0.0");
        txt_alimentacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_alimentacionActionPerformed(evt);
            }
        });

        txt_salud.setText("0.0");

        txt_educacion.setText("0.0");

        lbl_Vivienda.setText("Vivienda");

        lbl_alimentacion.setText("Alimentaci칩n");

        lbl_salud.setText("Salud");

        lbl_otros.setText("Otros gastos");

        txt_otros.setText("0.0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_vivienda, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                    .addComponent(txt_salud)
                    .addComponent(txt_alimentacion))
                .addGap(38, 38, 38)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(lbl_vestimenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_vestimenta, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(lbl_educacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_educacion, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(lbl_otros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(txt_otros, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbl_alimentacion)
                        .addComponent(lbl_Vivienda)
                        .addComponent(lbl_salud))
                    .addContainerGap(347, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_vestimenta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_vivienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_vestimenta)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbl_educacion)
                                    .addComponent(txt_educacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_alimentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(txt_salud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_otros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lbl_otros)))
                .addContainerGap(72, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(54, 54, 54)
                    .addComponent(lbl_Vivienda)
                    .addGap(12, 12, 12)
                    .addComponent(lbl_alimentacion)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(lbl_salud)
                    .addContainerGap(59, Short.MAX_VALUE)))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel25.setText("Totales");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 206, Short.MAX_VALUE))
                    .addComponent(jScrollNegocioTotales))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addComponent(jScrollNegocioTotales)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel_gastos, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(panel_gastos, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Items", jPanel7);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("DATOS DE LA FACTURA");

        jLabel10.setText("Codigo:");

        jLabel11.setText("Fecha:");

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setText("GASTOS");

        jLabel13.setText("Alimentacion:");

        jLabel14.setText("Vivienda:");

        jLabel15.setText("Vestimenta:");

        jLabel16.setText("Salud:");

        jLabel17.setText("Educacion:");

        jLabel18.setText("Otros:");

        jSeparator1.setBackground(new java.awt.Color(32, 32, 31));

        jLabel19.setText("Total sin I.V.A.");

        jLabel20.setText("I.V.A.");

        jLabel21.setText("Total con I.V.A.");

        jLabelgasto_alimentacion.setText("Ninguno");

        jLabelgasto_vestimenta.setText("Ninguno");

        jLabelgasto_vivienda.setText("Ninguno");

        jLabelgasto_salud.setText("Ninguno");

        jLabelgasto_educacion.setText("Ninguno");

        jLabelgasto_otros.setText("Ninguno");

        jLabelfac_total_sin_iva.setText("Sin Definir");

        jLabelfac_iva.setText("Sin Definir");

        jLabelfac_total_con_iva.setText("Sin Definir");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(136, 136, 136)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelgasto_otros)
                                    .addComponent(jLabelgasto_educacion)
                                    .addComponent(jLabelgasto_salud)
                                    .addComponent(jLabelgasto_vivienda)
                                    .addComponent(jLabelgasto_vestimenta)
                                    .addComponent(jLabelgasto_alimentacion)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addGap(133, 133, 133)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelfac_total_con_iva)
                                    .addComponent(jLabelfac_iva)
                                    .addComponent(jLabelfac_total_sin_iva))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabelgasto_alimentacion))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabelgasto_vestimenta))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabelgasto_vivienda))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabelgasto_salud))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabelgasto_educacion))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabelgasto_otros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabelfac_total_sin_iva))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabelfac_iva))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabelfac_total_con_iva))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelfac_cod.setText("No Encontrado");

        jLabelfac_fecha.setText("No Encontrado");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(92, 92, 92)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelfac_fecha)
                                    .addComponent(jLabelfac_cod))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabelfac_cod))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabelfac_fecha))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Factura", jPanel3);

        jButtonCancelarCarga.setText("Cancelar");
        jButtonCancelarCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarCargaActionPerformed(evt);
            }
        });

        jButtonGuardarDatosFactura.setText("Guardar");
        jButtonGuardarDatosFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarDatosFacturaActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jButtonCancelarCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButtonGuardarDatosFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelarCarga, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGuardarDatosFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        jMenuSeleccionarFactura.setText("Seleccionar Factura");
        jMenuSeleccionarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSeleccionarFacturaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuSeleccionarFactura);

        jMenuRegresarInicio.setText("Regresar al Inicio");
        jMenuRegresarInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRegresarInicioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuRegresarInicio);

        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Acciones");

        jMenuItem1.setText("Reporte");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ayuda");

        jMenuAyuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuAyuda.setText("Ayuda");
        jMenuAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAyudaActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuAyuda);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAyudaActionPerformed

        try {
            File htmlFile = new File("src/assets/help.html");
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (IOException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jMenuAyudaActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Desea Salir?", "Salir del Sistema", JOptionPane.YES_NO_CANCEL_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuRegresarInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRegresarInicioActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Desea Regresar a la Pantalla de Inicio?", "Salir del Sistema", JOptionPane.YES_NO_CANCEL_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            MainForm main = new MainForm();
            main.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jMenuRegresarInicioActionPerformed

    private void jMenuSeleccionarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSeleccionarFacturaActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File("Facturas/").getAbsoluteFile());

        FileNameExtensionFilter xmlfilter = new FileNameExtensionFilter(
                "xml files (*.xml)", "xml");
        fc.setFileFilter(xmlfilter);

        int returnVal = fc.showOpenDialog(XMLManager.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                //This is where a real application would open the file.
                this.pathFile = file.getCanonicalPath();
                cargar();

            } catch (IOException ex) {
                Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se seleccion칩 ning칰n archivo.", "Cancelado", 3);
        }
    }//GEN-LAST:event_jMenuSeleccionarFacturaActionPerformed

    private void jButtonGuardarDatosFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarDatosFacturaActionPerformed

        if (tablaProductos.getRowCount() == 0 && tablaNegocio.getRowCount() == 0) {

            JOptionPane.showMessageDialog(null, "No se han seleccionado facturas");
        } else {

            int filasTotales = tablaProductos.getRowCount();
            boolean validado = true;

            for (int i = 0; i < filasTotales; i++) {
                if (tablaProductos.getValueAt(i, 2).equals("")) {
                    validado = false;
                    break;
                }
            }

            int filasTotales2 = tablaNegocio.getRowCount();
            boolean validado2 = true;

            for (int i = 0; i < filasTotales2; i++) {
                if (tablaNegocio.getValueAt(i, 2).equals("")) {
                    validado2 = false;
                    break;
                }
            }

            if (validado == true /*|| validado2 == true*/) {

                guardarBDD();
                guardarBDDTipos();
                guardarDetalle();
                XMLManager nuevo = new XMLManager();
                nuevo.show();
                this.dispose();
            } else {

                JOptionPane.showMessageDialog(this, "No se ha seleccionado el tipo para cada producto");

            }

        }

    }//GEN-LAST:event_jButtonGuardarDatosFacturaActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        try {
            if (cp.esVacia() == true) {

                JOptionPane.showMessageDialog(null, "NO HA INGRESADO FACTURAS");

            } else {

                abrirReportes();
                this.dispose();

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonCancelarCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarCargaActionPerformed
        // TODO add your handling code here:

        XMLManager xml = new XMLManager();
        xml.show();
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarCargaActionPerformed

    private void jComboBoxTipoFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoFacturaActionPerformed


    }//GEN-LAST:event_jComboBoxTipoFacturaActionPerformed

    private void txt_alimentacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_alimentacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_alimentacionActionPerformed

    private void jComboBoxTipoGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoGastoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipoGastoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        imprimirQuery();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XMLManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XMLManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XMLManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XMLManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XMLManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCancelarCarga;
    private javax.swing.JButton jButtonGuardarDatosFactura;
    private javax.swing.JComboBox<String> jComboBoxTipoFactura;
    private javax.swing.JComboBox<String> jComboBoxTipoGasto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelcliente_ci;
    private javax.swing.JLabel jLabelcliente_nom;
    private javax.swing.JLabel jLabelfac_cod;
    private javax.swing.JLabel jLabelfac_fecha;
    private javax.swing.JLabel jLabelfac_iva;
    private javax.swing.JLabel jLabelfac_total_con_iva;
    private javax.swing.JLabel jLabelfac_total_sin_iva;
    private javax.swing.JLabel jLabelgasto_alimentacion;
    private javax.swing.JLabel jLabelgasto_educacion;
    private javax.swing.JLabel jLabelgasto_otros;
    private javax.swing.JLabel jLabelgasto_salud;
    private javax.swing.JLabel jLabelgasto_vestimenta;
    private javax.swing.JLabel jLabelgasto_vivienda;
    private javax.swing.JLabel jLabelprov_ciu;
    private javax.swing.JLabel jLabelprov_dir;
    private javax.swing.JLabel jLabelprov_nom;
    private javax.swing.JLabel jLabelprov_ruc;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuAyuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuRegresarInicio;
    private javax.swing.JMenuItem jMenuSeleccionarFactura;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollNegocioTotales;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_Vivienda;
    private javax.swing.JLabel lbl_alimentacion;
    private javax.swing.JLabel lbl_educacion;
    private javax.swing.JLabel lbl_otros;
    private javax.swing.JLabel lbl_salud;
    private javax.swing.JLabel lbl_vestimenta;
    private javax.swing.JScrollPane panel_gastos;
    private javax.swing.JTextField txt_alimentacion;
    private javax.swing.JTextField txt_educacion;
    private javax.swing.JTextField txt_otros;
    private javax.swing.JTextField txt_salud;
    private javax.swing.JTextField txt_vestimenta;
    private javax.swing.JTextField txt_vivienda;
    // End of variables declaration//GEN-END:variables

    private void cargar() throws FileNotFoundException {

        try {

            Cargar_XML carga = new Cargar_XML();

            BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(pathFile)));
            String line;

            File file = new File("src/BaseDatos/archivo.xml");

            file.createNewFile();

            Writer out = new BufferedWriter(
                    new OutputStreamWriter(new FileOutputStream(
                            "src/BaseDatos/archivo.xml"), "UTF-8"));

            try {

                while ((line = br.readLine()) != null) {

                    out.write(line);
                    out.write("\n");

                }

            } finally {

                br.close();
                out.close();

            }

            this.datos = carga.cargarXml("src/BaseDatos/archivo.xml");

            String query = "SELECT ID_FACTURA FROM 'main'.'factura' WHERE ID_FACTURA= '" + datos.getFactura_codigo() + "'";

            String resultado = cp.consultar(query);

            if (datos.getFactura_codigo().equals(resultado)) {

                JOptionPane.showMessageDialog(null, "LA FACTURA SELECCIONADA YA FUE INGRESADA");
                XMLManager form = new XMLManager();
                form.setVisible(true);
                this.dispose();

            } else {

                this.jLabelprov_nom.setText(datos.getProveedor_nombre());
                this.jLabelprov_ruc.setText(datos.getProveedor_ruc());
                this.jLabelprov_dir.setText(datos.getProveedor_direccion());
                this.jLabelprov_ciu.setText(datos.getProveedor_ciudad());

                this.jLabelcliente_ci.setText(datos.getCliente_ci());
                this.jLabelcliente_nom.setText(datos.getCliente_nombre());

                this.jLabelfac_cod.setText(datos.getFactura_codigo());
                this.jLabelfac_fecha.setText(datos.getFactura_fecha());
                this.jLabelfac_total_sin_iva.setText(datos.getFactura_total_sin_iva() + "");
                this.jLabelfac_iva.setText(datos.getFactura_iva() + "");
                this.jLabelfac_total_con_iva.setText(datos.getFactura_total_con_iva() + "");

                Object[][] aux = datos.getDatosProductos();

            }

            llamarListener();
            llamarListener2();

            System.out.println(jComboBoxTipoFactura.getSelectedItem().toString());

        } catch (JDOMException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void gastosTotales() {

        if (jLabelgasto_alimentacion.getText().equals("Ninguno")) {

            datos.setTotal_alimentacion(0.0);

        } else {

            datos.setTotal_alimentacion(Double.parseDouble(jLabelgasto_alimentacion.getText()));

        }

        if ((jLabelgasto_educacion.getText().equals("Ninguno"))) {

            datos.setTotal_educacion(0.0);

        } else {

            datos.setTotal_educacion(Double.parseDouble(jLabelgasto_educacion.getText()));

        }

        if ((jLabelgasto_salud.getText().equals("Ninguno"))) {

            datos.setTotal_salud(0.0);

        } else {

            datos.setTotal_salud(Double.parseDouble(jLabelgasto_salud.getText()));
        }

        if ((jLabelgasto_vestimenta.getText().equals("Ninguno"))) {

            datos.setTotal_vestimenta(0.0);

        } else {

            datos.setTotal_vestimenta(Double.parseDouble(jLabelgasto_vestimenta.getText()));

        }

        if ((jLabelgasto_vivienda.getText().equals("Ninguno"))) {

            datos.setTotal_vivienda(0.0);

        } else {

            datos.setTotal_vivienda(Double.parseDouble(jLabelgasto_vivienda.getText()));

        }

        if ((jLabelgasto_otros.getText().equals("Ninguno"))) {

            datos.setTotal_otros(0.0);

        } else {

            datos.setTotal_otros(Double.parseDouble(jLabelgasto_otros.getText()));

        }

    }

    private void guardarBDD() {

        try {
            Conexion.conecxionBDD();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

        gastosTotales();

        String facturaQ = "INSERT INTO 'main'.'factura' ('ID_FACTURA','ID_CLIENTE','ID_PROVEEDOR','FECHA','TOTAL_ALIMENTACION','TOTAL_VESTIMENTA','TOTAL_VIVIENDA','TOTAL_SALUD','TOTAL_EDUCACION','TOTAL_OTROS','TOTAL_SIN_IVA','IVA','TOTAL_CON_IVA') VALUES ('"
                + datos.getFactura_codigo() + "','" + datos.getCliente_ci() + "','" + datos.getProveedor_ruc() + "','" + datos.getFactura_fecha() + "'," + datos.getTotal_alimentacion() + "," + datos.getTotal_vestimenta() + "," + datos.getTotal_vivienda()
                + "," + datos.getTotal_salud() + "," + datos.getTotal_educacion() + "," + datos.getTotal_otros() + "," + datos.getFactura_total_sin_iva() + "," + datos.getFactura_iva() + "," + datos.getFactura_total_con_iva() + ")";

        String proveedorQ = "INSERT INTO 'main'.'proveedor' ('RUC','NOMBRE','DIRECCION','TIPOGASTO') VALUES ('"
                + datos.getProveedor_ruc() + "','" + datos.getProveedor_nombre() + "','" + datos.getProveedor_direccion() + "','" + jComboBoxTipoGasto.getSelectedItem().toString() + "')";

        String clienteQ = "INSERT INTO 'main'.'cliente' ('CI','NOMBRE') VALUES ('"
                + datos.getCliente_ci() + "','" + datos.getCliente_nombre() + "')";

        cp.insertar(facturaQ);
        cp.insertar(proveedorQ);
        cp.insertar(clienteQ);

        try {
            cp.cerrarConeccion();
            Conexion.conecxionBDD();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(null, "FACTURA CARGADA A LA BASE DE DATOS EXITOSAMENTE");
    }

    private void guardarDetalle() {

        try {
            Conexion.conecxionBDD();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

        ArrayList<String> detalle = new ArrayList<>();

        if (jComboBoxTipoFactura.getSelectedItem().equals("Negocio")) {

            for (int i = 0; i < tablaNegocio.getRowCount(); i++) {

                detalle.add(tablaNegocio.getValueAt(i, 0).toString());

            }

            Map<String, Integer> counterMap = new HashMap<>();

            for (int i = 0; i < detalle.size(); i++) {
                //fill the array
                if (counterMap.containsKey(detalle.get(i))) {
                    counterMap.put(detalle.get(i), counterMap.get(detalle.get(i)) + 1);
                } else {
                    counterMap.put(detalle.get(i), 1);
                }

            }

            for (int i = 0; i < tablaNegocio.getRowCount(); i++) {

                Object value = null;

                if (counterMap.containsKey(detalle.get(i))) {
                    value = counterMap.get(detalle.get(i));
                }

                double total = (Double) tablaNegocio.getValueAt(i, 1) * (int) value;

                detalleQ = "INSERT INTO 'main'.'detalle' ('ID_FACTURA','ITEM','CANTIDAD','TIPOGASTO','TOTALGASTO') VALUES ('"
                        + datos.getFactura_codigo() + "','" + tablaNegocio.getValueAt(i, 0) + "','" + value + "','" + tablaNegocio.getValueAt(i, 2) + "','" + total + "')";

                cp.insertar(detalleQ);

            }

        } else {

            for (int i = 0; i < tablaProductos.getRowCount(); i++) {

                detalle.add(tablaProductos.getValueAt(i, 0).toString());

            }

            Map<String, Integer> counterMap = new HashMap<>();

            for (int i = 0; i < detalle.size(); i++) {
                //fill the array
                if (counterMap.containsKey(detalle.get(i))) {
                    counterMap.put(detalle.get(i), counterMap.get(detalle.get(i)) + 1);
                } else {
                    counterMap.put(detalle.get(i), 1);
                }

            }

            for (int i = 0; i < tablaProductos.getRowCount(); i++) {

                Object value = null;

                if (counterMap.containsKey(detalle.get(i))) {
                    value = counterMap.get(detalle.get(i));
                }

                double total = (Double) tablaProductos.getValueAt(i, 1) * (int) value;

                detalleQ = "INSERT INTO 'main'.'detalle' ('ID_FACTURA','ITEM','CANTIDAD','TIPOGASTO','TOTALGASTO') VALUES ('"
                        + datos.getFactura_codigo() + "','" + tablaProductos.getValueAt(i, 0) + "','" + value + "','" + tablaProductos.getValueAt(i, 2) + "','" + total + "')";

                cp.insertar(detalleQ);

            }

        }

        try {
            cp.cerrarConeccion();
            Conexion.conecxionBDD();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void imprimirQuery() {

        List<String[]> anios = new ConexionBDD.Conexion().consultarFacturas2();

        String salida = "";
        
        ArrayList<String> datos = new ArrayList<>();
        
        
        for (int i = 0; i < anios.size(); i++) {

            String[] aux = anios.get(i);

            salida = aux[0] + "    Cod. Fact   " + aux[1];
            
            datos.add(aux[1]);

        }
        
        for(String c : datos){
        
        System.out.println(c);
        
        }

        /*ArrayList<String> detalle = new ArrayList<>();

        for (int i = 0; i < tablaProductos.getRowCount(); i++) {

            detalle.add(tablaProductos.getValueAt(i, 0).toString());

        }

        Map<String, Integer> counterMap = new HashMap<>();

        for (int i = 0; i < detalle.size(); i++) {
            //fill the array
            if (counterMap.containsKey(detalle.get(i))) {
                counterMap.put(detalle.get(i), counterMap.get(detalle.get(i)) + 1);
            } else {
                counterMap.put(detalle.get(i), 1);
            }

        }

        for (int i = 0; i < tablaProductos.getRowCount(); i++) {

            Object value = null;

            if (counterMap.containsKey(detalle.get(i))) {
                value = counterMap.get(detalle.get(i));
                System.out.println("Key : " + detalle.get(i) + " value :" + value);
            }

            double total = (Double) tablaProductos.getValueAt(i, 1) * (int) value;

           detalleQ = "INSERT INTO 'main'.'detalle' ('ID_FACTURA','ITEM','CANTIDAD','TIPOGASTO','TOTALGASTO') VALUES ('"
                        + datos.getFactura_codigo() + "','" + tablaProductos.getValueAt(i, 0) + "','" + value + "','" + tablaProductos.getValueAt(i, 2) + "','" + total + "')";
           
            System.out.println(detalleQ);

        }*/

 /*for (int i = 0; i < detalle.size(); i++) {

            if (detalle.get(i).equals(detalle.get(i + 1))) {

                detalle.set(i, detalle.get(i).toString() + " 2");

                detalle.remove(i + 1);

            } else {

                detalle.set(i, detalle.get(i).toString() + " 1");
            }

        }

        for (String c : detalle) {

            System.out.println(c);

        }*/
    }

    public void guardarBDDTipos() {

        //TIpos de datos 
        try {
            Conexion.conecxionBDDTipos();
            int fila = tablaProductos.getRowCount();
            for (int i = 0; i < fila; i++) {

                cp2.insertarTipos(tablaProductos.getValueAt(i, 0).toString(), tablaProductos.getValueAt(i, 2).toString());
                try {
                    cp2.cerrarConeccion();
                } catch (SQLException ex) {
                    Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            cp2.cerrarConeccion();
            try {
                Conexion.conecxionBDDTipos();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String convertFileToUTF8String(File file, String originalEncoding) {

        String contents = "";

        try {
            FileInputStream fis = new FileInputStream(file);
            StringBuilder sb = new StringBuilder();
            BufferedReader br = new BufferedReader(new InputStreamReader(fis, originalEncoding));
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line);
                sb.append('\n');
            }

            contents = new String(sb.toString().getBytes("UTF-8"));
        } catch (Exception ex) {
        }

        return contents;
    }

    private void setTablaDesgloce(Object[][] tipos) {

        String nombreCabeceras[] = {"Descripcion", "Precio Total", "Tipo de Gasto"};

        tipoEstado = new String[tipos.length];
        for (int i = 0; i < tipos.length; i++) {
            tipoEstado[i] = "";
        }

        tablaProductos = new JTable(tipos, nombreCabeceras) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }

        };

        panel_gastos.setViewportView(tablaProductos);

        comboBox = new JComboBox();
        comboBox.addItem("");

        comboBox.addItem("Vivienda");
        comboBox.addItem("Salud");
        comboBox.addItem("Educacion");
        comboBox.addItem("Alimentacion");
        comboBox.addItem("Vestimenta");
        comboBox.addItem("Otros Gastos");

        lista.clear();
        lista.add(new TipoItem("Vivienda", 0));
        lista.add(new TipoItem("Salud", 0));
        lista.add(new TipoItem("Educacion", 0));
        lista.add(new TipoItem("Alimentacion", 0));
        lista.add(new TipoItem("Vestimenta", 0));
        lista.add(new TipoItem("Otros Gastos", 0));

        tablaProductos.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent tme) {
                int row = tme.getFirstRow();
                int column = tme.getColumn();

                TableModel model = (TableModel) tme.getSource();
                Object data = model.getValueAt(row, column);

                if (!data.equals("") && column == 2) {

                    if (!tipoEstado[row].equals("")) {
                        restarTipoPersonal(lista, tipoEstado[row], row);

                    }

                    sumarTipoPersonal(lista, (String) data, row);
                    setValoresLabels(lista);

                }

            }
        });

        DefaultTableCellRenderer alinearDerecha = new DefaultTableCellRenderer();
        alinearDerecha.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        tablaProductos.getColumnModel().getColumn(1).setCellRenderer(alinearDerecha);

        tablaProductos.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(comboBox));

        tablaProductos.getColumnModel().getColumn(1).setMinWidth(100);
        tablaProductos.getColumnModel().getColumn(1).setMaxWidth(100);
        tablaProductos.getColumnModel().getColumn(2).setMinWidth(150);
        tablaProductos.getColumnModel().getColumn(2).setMaxWidth(150);

        setLocationRelativeTo(getParent());
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    private void setValoresLabels(ArrayList<TipoItem> listaT) {

        if (jComboBoxTipoFactura.getSelectedItem().equals("Personal")) {

            BigDecimal auxViv, auxSad, auxEdu, auxAli, auxVest, auxOtro, redondeadoViv, redondeadoSad, redondeadoEdu, redondeadoAli, redondeadoVest, redondeadoOtro;

            auxViv = new BigDecimal(listaT.get(0).total);
            redondeadoViv = auxViv.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            auxSad = new BigDecimal(listaT.get(1).total);
            redondeadoSad = auxSad.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            auxEdu = new BigDecimal(listaT.get(2).total);
            redondeadoEdu = auxEdu.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            auxAli = new BigDecimal(listaT.get(3).total);
            redondeadoAli = auxAli.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            auxVest = new BigDecimal(listaT.get(4).total);
            redondeadoVest = auxVest.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            auxOtro = new BigDecimal(listaT.get(5).total);
            redondeadoOtro = auxOtro.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            this.jLabelgasto_vivienda.setText(redondeadoViv + "");
            this.jLabelgasto_salud.setText(redondeadoSad + "");
            this.jLabelgasto_educacion.setText(redondeadoEdu + "");
            this.jLabelgasto_alimentacion.setText(redondeadoAli + "");
            this.jLabelgasto_vestimenta.setText(redondeadoVest + "");
            this.jLabelgasto_otros.setText(redondeadoOtro + "");

        }

    }

    private void setTablaNegocio(Object[][] tipos) {

        String nombreCabeceras[] = {"Descripcion", "Precio Total", "Tipo de Gasto de Negocio"};

        tipoEstado = new String[tipos.length];
        for (int i = 0; i < tipos.length; i++) {
            tipoEstado[i] = "";
        }

        tablaNegocio = new JTable(tipos, nombreCabeceras) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }

        };

        panel_gastos.setViewportView(tablaNegocio);

        modelo = new DefaultComboBoxModel(datosLista.toArray());

        comboBoxNegocio = new JComboBox();

        comboBoxNegocio.setModel(modelo);

        lista.clear();

        tablaNegocio.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent tme) {
                int row = tme.getFirstRow();
                int column = tme.getColumn();

                TableModel model = (TableModel) tme.getSource();
                Object data = model.getValueAt(row, column);

                if (!data.equals("") && column == 2) {
                    //System.out.println("anterior"+tipoEstado[row]+"actual"+(String)data);
                    if (!tipoEstado[row].equals("")) {

                        restarTipoNegocio(lista, tipoEstado[row], row);

                    }

                    sumarTipoNegocio(lista, (String) data, row);

                }

                if (data.equals("Agregar Gasto de Negocio")) {

                    agregarGastoNegocio(tme.getFirstRow(), tablaNegocio.getValueAt(tme.getFirstRow(), 2));

                }

            }
        });

        //gastosAutom치ticos();
        DefaultTableCellRenderer alinearDerecha = new DefaultTableCellRenderer();
        alinearDerecha.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        tablaNegocio.getColumnModel().getColumn(1).setCellRenderer(alinearDerecha);

        tablaNegocio.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(comboBoxNegocio));

        tablaNegocio.getColumnModel().getColumn(1).setMinWidth(100);
        tablaNegocio.getColumnModel().getColumn(1).setMaxWidth(100);
        tablaNegocio.getColumnModel().getColumn(2).setMinWidth(200);
        tablaNegocio.getColumnModel().getColumn(2).setMaxWidth(200);

        setLocationRelativeTo(getParent());
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    // restarTipo(lista,tipoEstado[row],tablaNegocio.getValueAt(row,1));

    public void setTablaSumaPersonal(ArrayList<TipoItem> listaT) {
        BigDecimal aux, redondeado;
        Object[][] matriz = new Object[listaT.size()][2];

        for (int i = 0; i < listaT.size(); i++) {

            aux = new BigDecimal(listaT.get(i).total);
            redondeado = aux.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            matriz[i][0] = listaT.get(i).tipo;
            matriz[i][1] = redondeado;
        }
        String header[] = {"Categoria", "Total"};
        tablaNegocioTotales = new JTable(matriz, header) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }

        };

        this.jScrollNegocioTotales.setViewportView(tablaNegocioTotales);

        jScrollNegocioTotales.setPreferredSize(new Dimension(350, 190));

    }

    public void setTablaSumaNegocios(ArrayList<TipoItem> listaT) {

        BigDecimal aux, redondeado;

        Object[][] matriz = new Object[listaT.size()][2];

        for (int i = 0; i < listaT.size(); i++) {

            aux = new BigDecimal(listaT.get(i).total);
            redondeado = aux.setScale(2, BigDecimal.ROUND_HALF_EVEN);

            matriz[i][0] = listaT.get(i).tipo;
            matriz[i][1] = redondeado;
        }

        String header[] = {"Categoria", "Total"};
        tablaNegocioTotales = new JTable(matriz, header) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 2;
            }

        };

        this.jScrollNegocioTotales.setViewportView(tablaNegocioTotales);

        jScrollNegocioTotales.setPreferredSize(new Dimension(350, 190));

    }

    private void restarTipoPersonal(ArrayList<TipoItem> listaT, String tipo, int row) {

        Object valor = tablaProductos.getValueAt(row, 1);
        for (int i = 0; i < listaT.size(); i++) {

            if (listaT.get(i).tipo.equals(tipo)) {

                listaT.get(i).total -= (Double) valor;

                setTablaSumaNegocios(listaT);
                return;
            }
        }
    }

    private void sumarTipoPersonal(ArrayList<TipoItem> listaT, String tipo, int row) {
        Object valor = tablaProductos.getValueAt(row, 1);
        for (int i = 0; i < listaT.size(); i++) {

            if (listaT.get(i).tipo.equals(tipo)) {

                listaT.get(i).total += (Double) valor;

                setTablaSumaNegocios(listaT);
                this.tipoEstado[row] = tipo;
                return;
            }
        }

        listaT.add(new TipoItem(tipo, (Double) valor));
        this.tipoEstado[row] = tipo;
        setTablaSumaNegocios(listaT);
    }

    public void restarTipoNegocio(ArrayList<TipoItem> listaT, String tipo, int row) {

        Object valor = tablaNegocio.getValueAt(row, 1);
        for (int i = 0; i < listaT.size(); i++) {

            if (listaT.get(i).tipo.equals(tipo)) {

                listaT.get(i).total -= (Double) valor;

                if (listaT.get(i).total == 0) {
                    listaT.remove(listaT.get(i));
                }

                setTablaSumaNegocios(listaT);
                return;
            }
        }

    }

    public void sumarTipoNegocio(ArrayList<TipoItem> listaT, String tipo, int row) {

        Object valor = tablaNegocio.getValueAt(row, 1);
        for (int i = 0; i < listaT.size(); i++) {

            if (listaT.get(i).tipo.equals(tipo)) {

                listaT.get(i).total += (Double) valor;

                setTablaSumaNegocios(listaT);
                this.tipoEstado[row] = tipo;
                return;
            }
        }

        listaT.add(new TipoItem(tipo, (Double) valor));
        this.tipoEstado[row] = tipo;
        setTablaSumaNegocios(listaT);

    }

    public void imprimir(ArrayList<TipoItem> listaT) {
        for (TipoItem ti : listaT) {
            System.out.println(listaT.toString() + "hola" + lista.size());
        }
    }

    public void restarAgregado(JLabel label, JTextField txtField, int row) {
        double total;
        total = Double.parseDouble(txtField.getText());
        total -= (Double) tablaProductos.getValueAt(row, 1);
        total = BigDecimal.valueOf(total).setScale(3, RoundingMode.HALF_UP).doubleValue();
        txtField.setText(String.valueOf(total));

        label.setText(String.valueOf(total));
    }

    public void sumarAgregado(JLabel label, JTextField txtField, int row, String tipo) {
        double total;
        total = Double.parseDouble(txtField.getText());
        total += (Double) tablaProductos.getValueAt(row, 1);
        total = BigDecimal.valueOf(total).setScale(3, RoundingMode.HALF_UP).doubleValue();
        txtField.setText(String.valueOf(total));
        tipoEstado[row] = tipo;

        label.setText(String.valueOf(total));
    }

    public double ingresarTipo(JTextField txtField, JLabel lblLabel) {
        double total;

        total = Double.parseDouble(txtField.getText());
        total = BigDecimal.valueOf(total).setScale(3, RoundingMode.HALF_UP).doubleValue();

        return total;
    }

    private void abrirReportes() {
        Reportes rep = new Reportes();
        rep.setCombos();
        rep.setVisible(true);
    }

    private void gastosAutom치ticos() {

        try {
            Conexion.conecxionBDDTipos();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

        int fila = tablaProductos.getRowCount();
        int i;
        String gasto;
        String aux = "";

        for (i = 0; i < fila; i++) {

            String valor = (String) tablaProductos.getValueAt(i, 0);

            StringTokenizer tokens = new StringTokenizer(valor, " ");

            while (tokens.hasMoreTokens()) {

                aux = tokens.nextToken();

                try {
                    Conexion.conecxionBDDTipos();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
                }

                gasto = cp.tipoGastoAutomatico(aux);

                if (cp.tipoGastoAutomatico(aux).isEmpty()) {

                    System.out.println("Es vacia");

                } else {

                    tablaProductos.setValueAt(gasto, i, 2);

                }

            }

        }

        try {
            cp.cerrarConeccion();
        } catch (SQLException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void EscogerTipoGasto() {

        jComboBoxTipoFactura.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                int fila = tablaProductos.getRowCount();
                int i;
                if (jComboBoxTipoGasto.getSelectedIndex() != -1) {
                    for (i = 0; i < fila; i++) {
                        tablaProductos.setValueAt(jComboBoxTipoGasto.getSelectedItem(), i, 2);
                    }
                }
            }

        });
    }

    public void setComboTipoGasto() {
        ArrayList<String> tipoGastos = new ArrayList<>();
        tipoGastos.add(" ");
        tipoGastos.add("Vivienda");
        tipoGastos.add("Salud");
        tipoGastos.add("Educacion");
        tipoGastos.add("Alimentacion");
        tipoGastos.add("Vestimenta");
        tipoGastos.add("Otros Gastos");
        jComboBoxTipoGasto.removeAllItems();
        for (String tipo : tipoGastos) {
            jComboBoxTipoGasto.addItem(tipo);
        }
        jComboBoxTipoGasto.setSelectedIndex(0);
    }

    public void setComboTipoFactura() {
        ArrayList<String> tipoGastos = new ArrayList<>();
        tipoGastos.add(" ");
        tipoGastos.add("Negocio");
        tipoGastos.add("Personal");

        jComboBoxTipoFactura.removeAllItems();
        for (String tipo : tipoGastos) {
            jComboBoxTipoFactura.addItem(tipo);
        }

    }

    private void llamarListener() {

        try {
            Conexion.conecxionBDD();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

        setComboTipoGasto();

        String query2 = "SELECT TipoGasto FROM 'main'.'proveedor' WHERE nombre= '" + datos.getProveedor_nombre() + "'";
        String resultado2 = cp.consultarProveedor(query2);

        if (resultado2 == null || resultado2.equals(" ") || resultado2.equals("null")) {

            jComboBoxTipoGasto.setSelectedIndex(-1);
            JOptionPane.showMessageDialog(null, "Escoja el tipo de gasto del proveedor");

        } else {

            jLabel24.setVisible(true);
            jComboBoxTipoFactura.setVisible(true);

            EscogerTipoGasto();
            jComboBoxTipoGasto.setSelectedItem(resultado2);

        }

        //gastosAutom치ticos();
        try {
            cp.cerrarConeccion();
            Conexion.conecxionBDD();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(XMLManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void llamarListener2() {

        setComboTipoFactura();

        EscogerTipoFactura();

        actualizarGastos();

    }

    public void agregarGastoNegocio(int posicion, Object gastoAnterior) {

        ListaGastos listaGastos = new ListaGastos(this, posicion, gastoAnterior, datosLista);

        listaGastos.setVisible(true);

    }

    public void EscogerTipoFactura() {

        setComboTipoFactura();

        jComboBoxTipoFactura.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                if (jComboBoxTipoFactura.getSelectedItem().equals("Negocio")) {

                    jPanel8.setVisible(false);
                    jPanel6.setVisible(true);
                    setTablaNegocio(datos.getDatosProductos());
                    tablaProductos.setVisible(false);
                    tablaNegocio.setVisible(true);

                    int fila = tablaNegocio.getRowCount();
                    int i;
                    if (jComboBoxTipoGasto.getSelectedIndex() != -1) {
                        for (i = 0; i < fila; i++) {
                            tablaNegocio.setValueAt(jComboBoxTipoGasto.getSelectedItem(), i, 2);
                        }

                    }

                } else if (jComboBoxTipoFactura.getSelectedItem().equals("Personal")) {

                    jPanel8.setVisible(false);
                    jPanel6.setVisible(true);
                    setTablaDesgloce(datos.getDatosProductos());

                    tablaProductos.setVisible(true);
                    tablaNegocio.setVisible(false);

                    int fila = tablaProductos.getRowCount();
                    int i;
                    if (jComboBoxTipoGasto.getSelectedIndex() != -1) {
                        for (i = 0; i < fila; i++) {
                            tablaProductos.setValueAt(jComboBoxTipoGasto.getSelectedItem(), i, 2);
                        }

                    }

                }

            }

        });

    }

    public void actualizarGastos() {

        if (jComboBoxTipoGasto.getSelectedItem().equals(" ")) {

            jLabel24.setVisible(false);

            jComboBoxTipoFactura.setVisible(false);

        } else {

            jLabel24.setVisible(true);

            jComboBoxTipoFactura.setVisible(true);

        }

        jComboBoxTipoGasto.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                jLabel24.setVisible(true);

                jComboBoxTipoFactura.setVisible(true);

                if (jComboBoxTipoFactura.getSelectedItem().equals("Negocio")) {

                    jPanel8.setVisible(false);
                    jPanel6.setVisible(true);
                    setTablaNegocio(datos.getDatosProductos());
                    tablaProductos.setVisible(false);
                    tablaNegocio.setVisible(true);

                    int fila = tablaNegocio.getRowCount();
                    int i;
                    if (jComboBoxTipoGasto.getSelectedIndex() != -1) {
                        for (i = 0; i < fila; i++) {
                            tablaNegocio.setValueAt(jComboBoxTipoGasto.getSelectedItem(), i, 2);
                        }

                    }

                } else if (jComboBoxTipoFactura.getSelectedItem().equals("Personal")) {

                    jPanel8.setVisible(false);
                    jPanel6.setVisible(true);
                    setTablaDesgloce(datos.getDatosProductos());

                    tablaProductos.setVisible(true);
                    tablaNegocio.setVisible(false);

                    int fila = tablaProductos.getRowCount();
                    int i;
                    if (jComboBoxTipoGasto.getSelectedIndex() != -1) {
                        for (i = 0; i < fila; i++) {
                            tablaProductos.setValueAt(jComboBoxTipoGasto.getSelectedItem(), i, 2);
                        }

                    }

                }

            }

        });

    }

}
